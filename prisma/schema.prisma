// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id
  provider         String
  providerId       String
  name             String?
  profileImage     String?
  UserProfileImage UserProfileImage[]
  planId           String?
  plan             Plan?              @relation(fields: [planId], references: [id], onDelete: SetNull)
  FCMToken         String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
  invite           Invite?
}

model UserProfileImage {
  url       String   @id
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum PlanStatus {
  WAITING
  ALARMED
}

model Plan {
  id        String     @id @default(uuid())
  name      String
  date      String
  place     Place?
  status    PlanStatus @default(WAITING)
  users     User[]
  invite    Invite[]
  createdAt DateTime   @default(now())
}

model Place {
  id      String @id @default(uuid())
  name    String
  address String
  x       String
  y       String
  planId  String @unique
  plan    Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)
}

model Invite {
  id        String   @id @default(uuid())
  planId    String
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
